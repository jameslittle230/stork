on:
  workflow_dispatch:
  push:
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
name: Create Release after Tag
jobs:
  release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false
  build_ubuntu:
    name: "Build Artifact (Ubuntu)"
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - run: pwd
      - name: Remove existing federalist directory
        run: rm -rf ./test/federalist
      - name: Checkout Federalist Papers
        uses: actions/checkout@v2
        with:
          repository: jameslittle230/federalist
          path: ./test
      - name: Install wasm-pack
        run: cargo install wasm-pack
      - name: Build wasm package
        run: yarn build:wasm:prod
      - name: Build everything else # TODO: Change yarn build so that it doesn't rely on yarn build:wasm:prod
        run: yarn build
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: ubuntu-stork-artifact
          path: ./target/release/stork
      - name: Run S3 upload script # TODO: Is there a way to move this to its own job?
        run: python3 ./scripts/upload_federalist.py
  build_macos:
    name: "Build Artifact (macOS)"
    runs-on: "macos-latest"
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project
        run: cargo build --verbose --release
      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: macos-stork-artifact
          path: ./target/release/stork
  release_upload:
    name: "Upload Artifacts to Github Release"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        artifact: ["macos-stork-artifact", "ubuntu-stork-artifact"] # todo: windows-latest doesn't build to ./target/release/stork
    needs: ["release", "build_ubuntu", "build_macos"]
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{matrix.artifact}}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }}
          asset_path: ${{ matrix.artifact }}
          asset_name: ${{ matrix.artifact }}
          asset_content_type: application/octet-stream
