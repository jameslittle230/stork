on:
  workflow_dispatch:
  push:
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
name: Create Release after Tag
jobs:
  test:
    name: Test Job
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run Upload Script
        run: | # upload_federalist.py assumes we're running from ./scripts
          cd scripts 
          python3 upload_federalist.py
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID  }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY  }}
  release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false

  build_ubuntu:
    name: "Build Artifact (Ubuntu)"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
      - name: Checkout Federalist Papers Repository
        uses: actions/checkout@v2
        with:
          repository: jameslittle230/federalist
          path: ./test/federalist
      - run: cargo install wasm-pack
      - name: Build WASM
        run: wasm-pack build --target web --out-name stork  -- --no-default-features
      - name: Build executable
        run: cargo build --verbose --release
      - run: ls -al ./test/federalist-config
      - name: Build Federalist index file and move to ./dist
        run: cargo run -- --build ./test/federalist-config/federalist.toml && mkdir -p dist && cp test/*.st dist
      - run: yarn install
      - run: yarn webpack --mode=production
      - name: Upload executable build artifact 
        uses: actions/upload-artifact@v1
        with:
          name: ubuntu-stork-artifact
          path: ./target/release/stork
      - name: Upload JS/WASM artifacts
        uses: actions/upload-artifact@v1
        with:
          name: dist-directory
          path: ./dist/

  build_macos:
    name: "Build Artifact (macOS)"
    runs-on: "macos-latest"
    steps:
      - uses: actions/checkout@v2
      - run: cargo build --verbose --release
      - uses: actions/upload-artifact@v1
        with:
          name: macos-stork-artifact
          path: ./target/release/stork

  release_upload:
    name: "Upload Artifacts to Github Release"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        artifact: ["macos-stork-artifact", "ubuntu-stork-artifact"] 
    needs: ["release", "build_ubuntu", "build_macos"]
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{matrix.artifact}}
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }}
          asset_path: stork
          asset_name: ${{ matrix.artifact }}
          asset_content_type: application/octet-stream

  s3_upload:
    name: "Upload Artifacts to S3"
    runs-on: "ubuntu-latest"
    needs: ["build_ubuntu"]
    steps:
      - uses: actions/setup-python@v2
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install boto3
      - name: Download dist directory artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist-directory
          path: ./dist/
      - run: ls dist
      - name: Run Upload Script
        run: | # upload_federalist.py assumes we're running from ./scripts
          cd scripts 
          python3 upload_federalist.py
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID  }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY  }}
