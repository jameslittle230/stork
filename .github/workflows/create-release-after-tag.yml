on:
  push:
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

name: "Create Release after Tag"
jobs:
  release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false

  ##############################
  ######## TESTING JOBS ########
  #############################

  #build_ubuntu_20:
    #name: "TEST - Build Artifact (Ubuntu 20.04)"
    #runs-on: "ubuntu-20.04"
    #steps:
      #- run: echo test-contents > stork
      #- uses: actions/upload-artifact@v1
        #with:
          #name: stork-ubuntu-20-04
          #path: stork

  #build_macos_10_15:
    #name: "TEST - Build Artifact (macOS)"
    #runs-on: "macos-10.15"
    #steps:
      #- run: echo test-contents > stork
      #- uses: actions/upload-artifact@v1
        #with:
          #name: stork-macos-10-15
          #path: stork

  #build_web_artifacts:
    #name: "TEST - Build web artifacts"
    #runs-on: "ubuntu-latest"
    #steps:
      #- run: |
          #mkdir dist
          #echo test-contents > dist/basic.css
          #echo test-contents > dist/dark.css
          #echo test-contents > dist/index.html
          #echo test-contents > dist/stork.js
          #echo test-contents > dist/stork.wasm

      #- name: Upload JS/WASM artifacts
        #uses: actions/upload-artifact@v1
        #with:
          #name: web-artifacts
          #path: ./dist/

  #build_test_index:
    #name: "TEST - Build test index"
    #runs-on: "ubuntu-latest"
    #needs: ["build_ubuntu_20"]
    #steps:
      #- run: touch federalist.st
      #- name: Upload JS/WASM artifacts
        #uses: actions/upload-artifact@v1
        #with:
          #name: federalist.st
          #path: federalist.st

  ###########################################
  ########## END TESTING JOBS ###############
  ###########################################


  build_ubuntu_20:
    name: "Build Artifact (Ubuntu 20.04)"
    runs-on: "ubuntu-20.04"
    steps:
      - uses: actions/checkout@v2
      - run: cargo build --verbose --release --all-features # just build-indexer
      - uses: actions/upload-artifact@v1
        with:
          name: stork-ubuntu-20-04
          path: ./target/release/stork


  build_macos_10_15:
    name: "Build Artifact (macOS)"
    runs-on: "macos-10.15"
    steps:
      - uses: actions/checkout@v2
      - run: cargo build --verbose --release --all-features # just build-indexer
      - uses: actions/upload-artifact@v1
        with:
          name: stork-macos-10-15
          path: ./target/release/stork

  build_web_artifacts:
    name: "Build web artifacts"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2

      - name: Set up wasm-pack
        uses: actions-rs/install@v0.1
        with:
          crate: wasm-pack
          use-tool-cache: true

      - name: Build WASM
        run: cd stork-wasm && wasm-pack build --target web --out-name stork -- --no-default-features --features="v3" # just build-wasm

      - run: yarn install

      - run: yarn webpack --config webpack.prod.js # just build-js

      - run: |
          cp themes/*.css ./dist/

      - name: Upload JS/WASM artifacts
        uses: actions/upload-artifact@v1
        with:
          name: web-artifacts
          path: ./dist/

  build_test_index:
    name: "Build test index"
    runs-on: "ubuntu-latest"
    needs: ["build_ubuntu_20"]
    steps:
      - uses: actions/checkout@v2 # To get ./test/federalist-config/federalist.toml

      - name: Checkout Federalist Papers Repository
        uses: actions/checkout@v2
        with:
          repository: jameslittle230/federalist
          path: ./local-dev/test-corpora/federalist

      - name: Download Stork binary
        uses: actions/download-artifact@v2
        with:
          name: stork-ubuntu-20-04

      - run: ls -lR
      - run: chmod +x ./stork
      - name: Build Federalist index file
        run: ./stork build --input local-dev/test-configs/federalist.toml --output federalist.st # just build-federalist-index

      - name: Upload JS/WASM artifacts
        uses: actions/upload-artifact@v1
        with:
          name: federalist.st
          path: federalist.st

  ##########################################
  ##### END JOBS THAT CREATE ARTIFACTS #####
  ##########################################

  upload_bin_artifacts_to_release:
    name: "Upload binary artifacts to Github Release"
    runs-on: "ubuntu-latest"
    needs: ["release", "build_ubuntu_20", "build_macos_10_15"]
    steps:
     - name: Download macOS Artifact
       uses: actions/download-artifact@v2
       with:
         name: stork-macos-10-15
         path: stork-macos-10-15

     - name: Download Ubuntu Artifact
       uses: actions/download-artifact@v2
       with:
         name: stork-ubuntu-20-04
         path: stork-ubuntu-20-04

     - run: ls -lR

     - name: Upload Release Asset
       uses: actions/upload-release-asset@v1
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
         upload_url: ${{ needs.release.outputs.release_upload_url }}
         asset_path: stork-macos-10-15/stork
         asset_name: stork-macos-10-15
         asset_content_type: application/octet-stream

     - name: Upload Release Asset
       uses: actions/upload-release-asset@v1
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
         upload_url: ${{ needs.release.outputs.release_upload_url }}
         asset_path: stork-ubuntu-20-04/stork
         asset_name: stork-ubuntu-20-04
         asset_content_type: application/octet-stream

  upload_web_artifacts_to_release:
    name: "Upload web artifacts to Github Release"
    runs-on: "ubuntu-latest"
    needs: ["release", "build_web_artifacts", "build_test_index"]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: web-artifacts
          path: web-artifacts

      - run: ls -lR

      - name: Upload WASM
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }}
          asset_path: web-artifacts/stork.wasm
          asset_name: stork.wasm
          asset_content_type: application/wasm

      - name: Upload stork.js
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.release_upload_url }}
          asset_path: web-artifacts/stork.js
          asset_name: stork.js
          asset_content_type: application/javascript

  upload_artifacts_to_s3:
    name: "Upload Artifacts to S3"
    runs-on: "ubuntu-latest"
    needs: ["build_ubuntu_20", "build_macos_10_15", "build_web_artifacts"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install boto3

      - uses: actions/download-artifact@v2
        with:
          name: web-artifacts
          path: web-artifacts

      - uses: actions/download-artifact@v2
        with:
          name: federalist.st

      - uses: actions/download-artifact@v2
        with:
          name: stork-ubuntu-20-04
          path: stork-ubuntu-20-04

      - uses: actions/download-artifact@v2
        with:
          name: stork-macos-10-15
          path: stork-macos-10-15

      - run: ls -lR

      - name: Run Upload Script
        run: |
          python3 ./scripts/upload_build_artifacts.py ${{ github.ref }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID  }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY  }}

