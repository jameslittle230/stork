[package]
name = "stork-search"
version = "1.2.1"
authors = ["James Little <littleguy23@gmail.com>"]
edition = "2018"
documentation = "https://stork-search.net/docs"
homepage = "https://stork-search.net"
description = "Impossibly fast web search, made for static sites."
repository = "https://github.com/jameslittle230/stork"
license = "Apache-2.0"
keywords = ["wasm", "webassembly", "search", "javascript"]
categories = ["wasm"]
exclude = ['/dist/', 'node_modules/', '/test/', '/test-assets/',]

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["build", "test-server"]
build = ["srtparse", "kuchiki", "frontmatter", "markdown", "atty", "indicatif", "colored", "unicode-segmentation"]
web-scraping = ["mime", "reqwest"]
test-server = ["build", "futures", "hyper", "tokio"]

[dependencies]
toml = "0.5"
serde = { version = "1.0", features = ["derive"] }
bincode = "1.2.1" # V2 index serialization
rmp-serde = "0.14.3" # V3 index serialization
serde_json = "1.0"
console_error_panic_hook = "0.1.6"
num-format = "0.4.0"
rust-stemmers = "1.2.0"
once_cell = "1.5.2"
clap = "2.33.3"
indicatif = {version = "0.15.0", optional = true} # progress bar
unicode-segmentation = {version = "1.7.1", optional = true} # Trim strings in progress bar by grapheme
colored = {version = "2.0.0", optional = true} # colored console output
srtparse = {version = "0.2.0", optional = true}
kuchiki = {version = "0.8.1", optional = true}
frontmatter = {version = "0.4.0", optional = true}
markdown = {version = "0.3.0", optional = true}
atty = {version = "0.2", optional = true} # determining whether stdin/stout is a tty
mime = {version = "0.3.16", optional = true}
reqwest = { version = "0.11", features = ["blocking", "json"], optional = true} # for loading document contents from URLs
futures = {version = "0.3", optional = true}
hyper = {version = "0.14", features = ["server", "tcp", "http1"], optional = true}
tokio = { version = "1.2", features = ["full"], optional = true }
wasm-bindgen = { version = "=0.2.70", features = ["serde-serialize"] }

[package.metadata.wasm-pack.profile.release]

# wasm-opt is out of date in wasm-bindgen, so we have to manually
# enable the "mutable globals" feature so wasm-opt doesn't reject
# the wasm blob that gets generated.
# See: https://github.com/rustwasm/wasm-pack/issues/886#issuecomment-667669802
wasm-opt = ["-Oz", "--enable-mutable-globals"]

[dev-dependencies]
criterion = "0.3"

[[bench]]
name = "basic"
harness = false

# [profile.release]

# This config option gives LLVM more opportunities to inline and prune functions,
# which makes the WASM binary smaller. Adding this was inspired by
# https://rustwasm.github.io/book/reference/code-size.html
#
# @TODO 2021-02-24: Starting with commit 7800aedfbb6b0e97a075cf6924077db2ddff7939,
# keeping this option in the full release build configuration means that
# `cargo build --release` mysteriously fails on the benchmark machine, so
# I commented it out.
lto = true
